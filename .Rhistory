knitr::opts_chunk$set(echo = TRUE)
car <- read.csv("data_car.csv")
glimpse(car)
library(tidyverse)
library(lmtest)
library(car)
library(MLmetrics)
library(GGally)
glimpse(car)
glimpse(car)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lmtest)
library(car)
library(MLmetrics)
library(GGally)
car <- read.csv("data_car.csv")
glimpse(car)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lmtest)
library(car)
library(MLmetrics)
library(GGally)
car <- read.csv("data_car.csv")
glimpse(car)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
# data wrangling
library(tidyverse)
#cek asumsi model
library(lmtest)
library(car)
#menghitung error
library(MLmetrics)
#visualisai korelasi
library(GGally)
car_Data <- read.csv("data_input/car data.csv")
glimpse(car_Data)
table(car_Data$Owner)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
# data wrangling
library(tidyverse)
#cek asumsi model
library(lmtest)
library(car)
#menghitung error
library(MLmetrics)
#visualisai korelasi
library(GGally)
car_Data <- read.csv("data_input/car data.csv")
glimpse(car_Data)
table(car_Data$Owner)
df_data <- car_Data %>%
mutate_if(is.character, as.factor)
colSums(is.na(df_data))
table(df_data$Owner, df_data$Fuel_Type)
df_data <- df_data %>%
mutate(
Owner = ifelse(Owner == 3, yes = 1, no = Owner)) %>%  # ganti 3 jadi 1 / bila na pake is.na ganti tulisan owner nya
filter(Fuel_Type != "CNG") #buang fule cng
n_distinct(df_data$Car_Name)
ggcorr(df_data, label = T)
options(scipen = 999)
plot(df_data$Kms_Driven, df_data$Selling_Price)
boxplot(df_data$Selling_Price)
df_filter <- df_data %>%
filter(Kms_Driven <150000)
plot(df_filter$Kms_Driven, df_filter$Selling_Price)
ggcorr(df_filter, label = T) #cek korelasi lagi
plot(df_data$Year, df_data$Selling_Price)
df_data %>%
group_by(Car_Name) %>%
summarise(Selling_Price= mean(Selling_Price),
freq = n()) %>%
arrange(desc(Selling_Price))
# model_filter
#membuat model tanpa car name
df_filter <- df_data %>% filter(Kms_Driven < 150000)
model_filter <- lm(formula = Selling_Price ~ .,  data = df_filter %>%  select(-Car_Name))
summary(model_filter)
#adjusted R-square
summary_model <- summary(model_filter)
summary_model$adj.r.squared
# model_penuh
model_penuh <-  lm(formula = Selling_Price ~ ., data = df_data)
summary(model_penuh)
car_new <- read.csv("data_input/car_test.csv")
car_new
pred_test <- predict(model_filter, newdata = car_new)
head(pred_test)
# mean Absolute Error
MAE(pred_test, car_new$Selling_Price)
#Mean Absolute precentage Error
MAPE(pred_test, car_new$Selling_Price)
# Root Mean Square Error
RMSE(pred_test, car_new$Selling_Price)
vif(model_filter)
plot(density(model_filter$residuals))
shapiro.test(model_filter$residuals)
qqPlot(model_filter$residuals)
bptest(model_filter)
plot(model_filter$fitted.values, model_filter$residuals)
df_data <- car %>%
mutate_if(is.character, as.factor)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lmtest)
library(car)
library(MLmetrics)
library(GGally)
car <- read.csv("data_car.csv")
glimpse(car)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lmtest)
library(car)
library(MLmetrics)
library(GGally)
car <- read.csv("data_car.csv")
glimpse(car)
df_car <- car %>%
mutate_if(is.character, as.factor)
colSums(is.na(df_car))
ggcorr(df_car, label = T)
plot(df_car$Kms_Driven, df_car$Present_Price)
ggcorr(df_car, label = T)
boxplot(df_car$Present_Price)
boxplot(df_car)
boxplot(df_car$Present_Price)
plot(df_car$Year, df_car$Present_Price)
df_car %>%
group_by(Car_Name) %>%
summarise(Present_Price= mean(Present_Price),
freq = n()) %>%
arrange(desc(Present_Price))
model_car <-  lm(formula = Present_Price ~ Selling_Price, data = df_car)
summary(model_car)
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car$coefficients[1],df_car$coefficients[2])
model_car
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car$coefficients[10],df_car$coefficients[20])
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car$coefficients[1],df_car$coefficients[2])
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car$coefficients[1],df_car$coefficients[2])
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car$coefficients[1],df_car$coefficients[2])
model_car <-  lm(formula = Present_Price ~ Selling_Price, data = df_car)
summary(model_car)
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car)
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car)
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car)
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car)
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car)
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car)
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car)
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car$coefficients[1],df_car$coefficients[2])
data.frame(prediksi = model_filter$fitted.values, error = model_filter$residuals) %>%
ggplot(aes(prediksi,error))+
geom_hline(yintercept = 0)+ #garis lurus di sumbu y = 0
geom_point()+
geom_smooth()
model_car <-  lm(formula = Present_Price ~ ., data = df_car)
summary(model_car)
model_car <-  lm(formula = Present_Price ~ Selling_Price, data = df_car)
summary(model_car)
model_car <-  lm(formula = Present_Price ~ ., data = df_car %>%  select(-Car_Name))
summary(model_car)
model_car <-  lm(formula = Present_Price ~ ., data = df_car)
summary(model_car)
model_car <-  lm(formula = Present_Price ~ ., data = df_car %>%  select(-Car_Name))
summary(model_car)
test_car <- read.csv("car_test.csv")
test_car
pred_test <- predict(model_car, newdata = test_car)
head(pred_test)
MAE(pred_test, test_car$Present_Price)
MAPE(pred_test, test_car$Present_Price)
RMSE(pred_test, test_car$Present_Price)
vif(model_car)
plot(density(model_car$residuals))
shapiro.test(model_car$residuals)
qqPlot(model_car$residuals)
bptest(model_car)
plot(model_car$fitted.values, model_car$residuals)
data.frame(prediksi = model_car$fitted.values, error = model_car$residuals) %>%
ggplot(aes(prediksi,error))+
geom_hline(yintercept = 0)+ #garis lurus di sumbu y = 0
geom_point()+
geom_smooth()
plot(model_car$fitted.values, model_car$residuals)
abline(h = 0, col = "red")
plot(df_car$Selling_Price, df_car$Present_Price)
abline(h = 0, col = "red")
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car = 0, col = "red")
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car)
knitr::include_graphics("Beli-mobil.jpg")
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics("Beli-mobil.jpg")
library(tidyverse)
library(lmtest)
library(car)
library(MLmetrics)
library(GGally)
car <- read.csv("data_car.csv")
glimpse(car)
df_car <- car %>%
mutate_if(is.character, as.factor)
colSums(is.na(df_car))
ggcorr(df_car, label = T)
boxplot(df_car$Present_Price)
plot(df_car$Year, df_car$Present_Price)
df_car %>%
group_by(Car_Name) %>%
summarise(Present_Price= mean(Present_Price),
freq = n()) %>%
arrange(desc(Present_Price))
model_car <-  lm(formula = Present_Price ~ ., data = df_car %>%  select(-Car_Name))
summary(model_car)
plot(df_car$Selling_Price, df_car$Present_Price)
abline(df_car)
test_car <- read.csv("car_test.csv")
test_car
pred_test <- predict(model_car, newdata = test_car)
head(pred_test)
MAE(pred_test, test_car$Present_Price)
MAPE(pred_test, test_car$Present_Price)
RMSE(pred_test, test_car$Present_Price)
vif(model_car)
plot(density(model_car$residuals))
shapiro.test(model_car$residuals)
qqPlot(model_car$residuals)
bptest(model_car)
plot(model_car$fitted.values, model_car$residuals)
abline(h = 0, col = "red")
data.frame(prediksi = model_car$fitted.values, error = model_car$residuals) %>%
ggplot(aes(prediksi,error))+
geom_hline(yintercept = 0)+ #garis lurus di sumbu y = 0
geom_point()+
geom_smooth()
---
title: "Predict Buy Car"
author: "Eko Nurfitriyanto"
date: "5/4/2021"
output: html_document
---
